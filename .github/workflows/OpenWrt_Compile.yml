#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# # #

name: OpenWrt-Compile

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master

jobs:

  build_openwrt:

    name: Build OpenWrt and release
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          
          df -h
          
      - name: Clone source code
        working-directory: /workdir
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
          
      - name: Custome packages
        working-directory: /workdir/openwrt
        run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages
          git clone https://github.com/openwrt-develop/luci-theme-atmaterial.git
          # git clone https://github.com/KFERMercer/luci-app-serverchan
          git clone https://github.com/rosywrt/luci-theme-rosy
          # git clone https://github.com/Ameykyl/luci-app-koolproxyR
          git clone https://github.com/xiaoqingfengATGH/luci-theme-infinityfreedom.git
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          git clone https://github.com/vernesong/OpenClash.git

      - name: Update feeds
        working-directory: /workdir/openwrt
        run: |
          sed -i 's/^#\(.*helloworld\)/\1/' feeds.conf.default
          # sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        working-directory: /workdir/openwrt
        run: |
          rm -f ./.config*
          touch ./.config
          
          # 取消编译VMware镜像:
          cat >> .config <<EOF
          # CONFIG_VMDK_IMAGES is not set
          EOF
          
          # 取消编译UEFI固件:
          cat >> .config <<EOF
          CONFIG_EFI_IMAGES=n
          EOF
          
          # Compress firmware:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF
          
          # LuCI theme:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-atmaterial=y
          CONFIG_PACKAGE_luci-theme-rosy=y
          CONFIG_PACKAGE_luci-theme-infinityfreedom=y
          # CONFIG_PACKAGE_luci-theme-netgear=y
          EOF
          
          # OpenClash:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-app-openclash=y
          EOF
          
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        working-directory: /workdir/openwrt
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        working-directory: /workdir/openwrt
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        working-directory: /workdir/openwrt
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware
          path: openwrt/bin/targets/

      - name: Create release
        if: github.event == 'push'
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false      

      - name: Upload release asset
        if: github.event == 'push'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: openwrt/bin/targets/*/*/
